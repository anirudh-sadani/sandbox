Reshma Pandey 9009010090


hadoop-2.7.0/bin/hdfs dfs -rmr -skipTrash /home/asadani/rampup/output*
hadoop-2.7.0/bin/hdfs dfs -rm -skipTrash /home/asadani/rampup/input/*
hadoop-2.7.0/bin/hdfs dfs -copyFromLocal ../user-traffic.log /home/asadani/rampup/input

 
hadoop-2.7.0/bin/hadoop jar /home/IMPETUS/asadani/codebase/rampup/sandbox/data-flattener/target/data-flattener-0.0.1-SNAPSHOT.jar com.asadani.flattener.JSONDataFlattener /home/asadani/rampup/input/user-traffic.log /home/asadani/rampup/output/


mvn exec:java


http://stackoverflow.com/questions/29784532/pig-keeps-trying-to-connect-to-job-history-server-and-fails


<property>
<name>mapreduce.jobhistory.address</name>
<value>cm:10020</value>
<description>Host and port for Job History Server (default 0.0.0.0:10020)</description>
</property>

ps ax | grep -e JobHistory

/home/asadani/rampup/output/days

0.154.253.186,1444501382355,5208,POST,user/register,example,asdf

A = load '/home/asadani/rampup/output/days/10/21_927-r-00021' USING PigStorage(',') AS (clientIPAddress:bytearray, timestamp:bytearray, zipcode:bytearray, httpMethod:bytearray, httpURL:bytearray, userId:bytearray, userAuthToken:bytearray, eventDate:int, eventMonth:int, eventYear:int);

create 'HITS_BY_DAY', 'output'

===============WORKING================

FLAT_DATA = load '/home/asadani/rampup/output/days/*' USING PigStorage(',') AS (clientIPAddress:chararray, timestamp:chararray, zipcode:chararray, httpMethod:chararray, httpURL:chararray, userId:chararray, userAuthToken:chararray, userBrowser:chararray,  eventDate:chararray, eventMonth:chararray, eventYear:chararray);

FLAT_DATA_WITH_DATE = foreach FLAT_DATA generate clientIPAddress, timestamp, zipcode, httpMethod, httpURL, userId, userAuthToken, userBrowser, CONCAT(CONCAT(CONCAT((chararray)eventDate, '-'), (chararray)eventMonth, '-'), (chararray)eventYear) AS eventDateCon:chararray;

GROUPED_BY_DAY = GROUP FLAT_DATA_WITH_DATE BY eventDateCon;

COUNT_HITS_BY_DAY = FOREACH GROUPED_BY_DAY GENERATE group as myVar, COUNT(FLAT_DATA_WITH_DATE) as countForDay;

COUNT_HITS_BY_DAY_SUMMARY = FOREACH COUNT_HITS_BY_DAY GENERATE (chararray)myVar as day, (int)countForDay as count;

ILLUSTRATE COUNT_HITS_BY_DAY_SUMMARY;

STORE COUNT_HITS_BY_DAY_SUMMARY INTO 'hbase://HITS_BY_DAY' USING org.apache.pig.backend.hadoop.hbase.HBaseStorage ('output:count');


===============WORKING================

<dependency>
	<groupId>org.cloudera.htrace</groupId>
	<artifactId>htrace-core</artifactId>
	<version>2.05</version>
</dependency>

 export HADOOP_CLASSPATH=$CLASSPATH:/home/IMPETUS/asadani/codebase/rampup/sandbox/data-generator/target/lib/htrace-core-2.05.jar:$HADOOP_CLASSPATH

		

STORE COUNT_HITS_BY_DAY_SUMMARY INTO 'hbase://pig_table' USING org.apache.pig.backend.hadoop.hbase.HBaseStorage ('cf:count');


PIG_CLASSPATH=/usr/lib/hbase/hbase.jar:/usr/lib/zookeeper/zookeeper-3.4.5-cdh4.4.0.jar /usr/bin/pig /home/training/Load_HBase_Customers.pig







B = GROUP A BY userAuthToken;

C = FOREACH B {
SESSION_ACTIVITY = ORDER A BY timestamp;
GENERATE SESSION_ACTIVITY, COUNT(A);
};


hadoop-2.7.0/sbin/mr-jobhistory-daemon.sh start historyserver


======================================

Most visited pages by users

create 'MOST_VISITED_PAGES_BY_USERS', 'count'



FLAT_DATA = load '/home/asadani/rampup/output/days/*' USING PigStorage(',') AS (clientIPAddress:chararray, timestamp:chararray, zipcode:chararray, httpMethod:chararray, httpURL:chararray, userId:chararray, userAuthToken:chararray, eventDate:chararray, eventMonth:chararray, eventYear:chararray);

FLAT_DATA_FILTERED = FILTER FLAT_DATA BY (httpURL matches 'view/home' or httpURL matches 'view/product' or httpURL matches 'view/category');


FLAT_DATA_WITH_MONTH = foreach FLAT_DATA_FILTERED generate clientIPAddress, timestamp, zipcode, httpMethod, httpURL, userId, userAuthToken, CONCAT(CONCAT((chararray)eventMonth, '-'), (chararray)eventYear) AS eventMonthCon:chararray;

GROUPED_BY_MONTH_PAGE = GROUP FLAT_DATA_WITH_MONTH BY (eventMonthCon, httpURL);

COUNT_HITS_PER_PAGE_BY_MONTH = FOREACH GROUPED_BY_MONTH_PAGE GENERATE group as groupKey, COUNT(FLAT_DATA_WITH_MONTH) as countForMonth;

COUNT_HITS_PER_PAGE_BY_MONTH_SUMMARY = FOREACH COUNT_HITS_PER_PAGE_BY_MONTH GENERATE groupKey, (int)countForMonth as count;

STORE COUNT_HITS_PER_PAGE_BY_MONTH_SUMMARY INTO 'hbase://MOST_VISITED_PAGES_BY_USERS' USING org.apache.pig.backend.hadoop.hbase.HBaseStorage ('count:count');







sudo service mysql start

ln -s /usr/share/java/mysql-connector-java-5.1.28.jar /home/IMPETUS/asadani/Installs/apache-hive-1.2.1-bin/lib/mysql-connector-java-5.1.28.jar

/home/IMPETUS/asadani/Installs/apache-hive-1.2.1-bin/lib

SOURCE /home/IMPETUS/asadani/Installs/apache-hive-1.2.1-bin/scripts/metastore/upgrade/mysql/hive-schema-0.10.0.mysql.sql;

CREATE USER 'hive'@'localhost' IDENTIFIED BY 'hive';

REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'hive'@'localhost';

GRANT SELECT,INSERT,UPDATE,DELETE,LOCK TABLES,EXECUTE ON metastore.* TO 'hive'@'localhost';




$ sudo chkconfig mysql on

REGISTER ... jar;

FLAT_DATA = load '/home/asadani/rampup/output/days/*' USING PigStorage(',') AS (clientIPAddress:chararray, timestamp:chararray, zipcode:chararray, httpMethod:chararray, httpURL:chararray, userId:chararray, userAuthToken:chararray, eventDate:chararray, eventMonth:chararray, eventYear:chararray);

GROUPED_BY_SESSION = GROUP FLAT_DATA BY userAuthToken;

SOMETHING = FOREACH GROUPED_BY_SESSION GENERATE com.asadani.ca.pig.udf.BagIterator(FLAT_DATA) AS bar;






{originatingIPAddress:'212.178.197.156', timestamp:'1448173259236', httpData:{httpMethod:'PUT', httpUrl:'user/register', headerParamAuthToken:'34asdwertf2weralorjvirw23kdfgnir9805d', headerParamUserId:'rob6@yetanothermail.com'}, userBrowser:'Chrome', zipcode:'20020'}

hadoop-2.7.0/bin/hdfs dfs -rmr -skipTrash /home/asadani/rampup/output*
hadoop-2.7.0/bin/hdfs dfs -rm -skipTrash /home/asadani/rampup/input/*
hadoop-2.7.0/bin/hdfs dfs -copyFromLocal ../user-traffic.log /home/asadani/rampup/input

==========================================================================================================================



<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">

    <title>Case Study</title>

    <!-- Bootstrap core CSS -->
    <link href="css/lib/bootstrap.min.css" rel="stylesheet">
    <link href="css/lib/nv.d3.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/app.css" rel="stylesheet">
    
    <style>
        svg {
            display: block;
        }
        svg.sparkline {
            height: inherit;
            /* font-size: 14px;
            margin-top: -6px; */
        }
    </style>
    
  </head>

  <body>

    <div class="navbar-collapse collapse inverse" id="navbar-header">
      <div class="container-fluid">
        <div class="about">
          <h4>About</h4>
          <p class="text-muted">Add some information about the album below, the author, or any other background context. Make it a few sentences long so folks can pick up some informative tidbits. Then, link them off to some social networking sites or contact information.</p>
        </div>
        <div class="social">
          <h4>Contact</h4>
          <ul class="list-unstyled">
            <li><a href="#">Follow on Twitter</a></li>
            <li><a href="#">Like on Facebook</a></li>
            <li><a href="#">Email me</a></li>
          </ul>
        </div>
      </div>
    </div>
    <div class="navbar navbar-static-top navbar-dark bg-inverse">
      <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-header">
          &#9776;
        </button>
        <a href="#" class="navbar-brand">Case Study</a>
      </div>
    </div>

	<div class="container">

		<div class="row">
			<p></p>
		</div>

		<div class="row">
			<div class="card-deck-wrapper">
				<div class="card-deck">
					<div class="card card-inverse text-xs-center">
						<div class="card-block card-primary">
							<h1 class="card-title">5,26,634</h1>
							<cite class="card-text">Hits</cite>
						</div>
						<div class="card-img-bottom"><svg id="chart1" class="sparkline"></svg></div>
					</div>

					<div class="card card-inverse text-xs-center">
						<div class="card-block card-success">
							<h1 class="card-title">79,245</h1>
							<cite class="card-text">Users</cite>
						</div>
						<div class="card-img-bottom"><svg id="chart2" class="sparkline"></svg></div>
					</div>

					<div class="card card-inverse text-xs-center">
						<div class="card-block card-info">
							<h1 class="card-title">22,663</h1>
							<cite class="card-text">Refreshes</cite>
						</div>
						<div class="card-img-bottom"><svg id="chart3" class="sparkline"></svg></div>
					</div>

					<div class="card card-inverse text-xs-center">
						<div class="card-block card-warning">
							<h1 class="card-title">38,526</h1>
							<cite class="card-text">Backs</cite>
						</div>
						<div class="card-img-bottom"><svg id="chart4" class="sparkline"></svg></div>
					</div>
				</div>
			</div>
		</div>
		
		<div class="row">
			<p></p>
		</div>

		<div class="row">
			<div class="card-group">
				<div class="card col-xs-12 col-md-9 m-a-0 p-a-0" style="height:35em">
					<!-- <img data-src="holder.js/100px100p/thumb" alt="Card image cap"> -->
					<div id="map" style="height:inherit"></div>
				</div>
				<div class="card col-xs-12 col-md-3 m-a-0 p-a-0" style="height:35em; overflow:auto;">
					<div class="card-block">
						<h4 class="card-title text-xs-right">Traffic <cite>by location</cite></h4>
					</div>
					<ul class="list-group list-group-flush slim-scroll">
    					<li class="list-group-item">Cras justo odio</li>
    					<li class="list-group-item">Dapibus ac facilisis in</li>
    					<li class="list-group-item">Vestibulum at eros</li>
    					<li class="list-group-item">Cras justo odio</li>
    					<li class="list-group-item">Dapibus ac facilisis in</li>
    					<li class="list-group-item">Vestibulum at eros</li>
    					<li class="list-group-item">Cras justo odio</li>
    					<li class="list-group-item">Dapibus ac facilisis in</li>
    					<li class="list-group-item">Vestibulum at eros</li>
    					<li class="list-group-item">Cras justo odio</li>
    					<li class="list-group-item">Dapibus ac facilisis in</li>
    					<li class="list-group-item">Vestibulum at eros</li>
  					</ul>
				</div>
			</div>
		</div>
		
		<div class="row">
			<p></p>
		</div>
		
		<div class="row">
			<div class="card-group">
				<div class="card col-xs-12 col-md-3 m-a-0 p-a-0" style="height:35em; overflow:auto;">
					<div class="card-block">
						<h4 class="card-title text-xs-left">Traffic <cite>by pages</cite></h4>
					</div>
					<ul class="list-group list-group-flush slim-scroll">
    					<li class="list-group-item">Cras justo odio</li>
    					<li class="list-group-item">Dapibus ac facilisis in</li>
    					<li class="list-group-item">Vestibulum at eros</li>
    					<li class="list-group-item">Cras justo odio</li>
    					<li class="list-group-item">Dapibus ac facilisis in</li>
    					<li class="list-group-item">Vestibulum at eros</li>
    					<li class="list-group-item">Cras justo odio</li>
    					<li class="list-group-item">Dapibus ac facilisis in</li>
    					<li class="list-group-item">Vestibulum at eros</li>
    					<li class="list-group-item">Cras justo odio</li>
    					<li class="list-group-item">Dapibus ac facilisis in</li>
    					<li class="list-group-item">Vestibulum at eros</li>
  					</ul>
				</div>
				<div class="card col-xs-12 col-md-9 m-a-0 p-a-0" style="height:35em">
					<img data-src="holder.js/100px100p/thumb" alt="Card image cap">
				</div>
			</div>
		</div>
		

	</div>

	<!-- <section class="jumbotron text-xs-center">
      <div class="container">
        <h1 class="jumbotron-heading">Album example</h1>
        <p class="lead text-muted">Something short and leading about the collection below—its contents, the creator, etc. Make it short and sweet, but not too short so folks don't simply skip over it entirely.</p>
        <p>
          <a href="#" class="btn btn-primary">Main call to action</a>
          <a href="#" class="btn btn-secondary">Secondary action</a>
        </p>
      </div>
    </section> -->

    <!-- <div class="album text-muted">
      <div class="container">

        <div class="row">
          <div class="card">
            <img data-src="holder.js/100px280?text=Add \n line <b>breaks</b> \n anywhere." alt="Card image cap">
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          </div>
          <div class="card">
            <img data-src="holder.js/100px280/thumb" alt="Card image cap">
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          </div>
          <div class="card">
            <img data-src="holder.js/100px280/thumb" alt="Card image cap">
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          </div>

          <div class="card">
            <img data-src="holder.js/100px280/thumb" alt="Card image cap">
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          </div>
          <div class="card">
            <img data-src="holder.js/100px280/thumb" alt="Card image cap">
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          </div>
          <div class="card">
            <img data-src="holder.js/100px280/thumb" alt="Card image cap">
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          </div>

          <div class="card">
            <img data-src="holder.js/100px280/thumb" alt="Card image cap">
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          </div>
          <div class="card">
            <img data-src="holder.js/100px280/thumb" alt="Card image cap">
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          </div>
          <div class="card">
            <img data-src="holder.js/100px280/thumb" alt="Card image cap">
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          </div>
        </div>

      </div>
    </div> -->

    <footer class="text-muted">
      <div class="container">
        <p class="pull-xs-right">
          <a href="#">Back to top</a>
        </p>
        <p>&copy; Nishant Rathi, 2016</p>
        <!-- <p>New to Bootstrap? <a href="../../">Visit the homepage</a> or read our <a href="../../getting-started/">getting started guide</a>.</p> -->
      </div>
    </footer>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>
    <script src="javascript/lib/holder.min.js"></script>
    <script>
      $(function () {
        Holder.addTheme("thumb", { background: "#55595c", foreground: "#eceeef", text: "Thumbnail" });
      });
    </script>
    <script src="javascript/lib/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.2/d3.min.js" charset="utf-8"></script>
    <script src="javascript/lib/nv.d3.min.js"></script>
    <script type="text/javascript" src="javascript/lib/jquery.slimscroll.min.js"></script>
    <script>
    $(function(){
        $('.slim-scroll').slimScroll({
            height: $('.slim-scroll').height()/* ,
            position:'left',
            distance: '50px' */
        });
    });
    </script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <script src="../../assets/js/ie10-viewport-bug-workaround.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script>
 // This example creates circles on the map, representing populations in North
 // America.

 // First, create an object containing LatLng and population for each city.
 var citymap = {
   chicago: {
     center: {lat: 41.878, lng: -87.629},
     population: 2714856
   },
   newyork: {
     center: {lat: 40.714, lng: -74.005},
     population: 8405837
   },
   losangeles: {
     center: {lat: 34.052, lng: -118.243},
     population: 3857799
   },
   vancouver: {
     center: {lat: 49.25, lng: -123.1},
     population: 603502
   }
 };

 function initMap() {
   // Create the map.
   var map = new google.maps.Map(document.getElementById('map'), {
     zoom: 4,
     center: {lat: 37.090, lng: -95.712},
     mapTypeId: google.maps.MapTypeId.TERRAIN
   });

   // Construct the circle for each value in citymap.
   // Note: We scale the area of the circle based on the population.
   for (var city in citymap) {
     // Add the circle for this city to the map.
     var cityCircle = new google.maps.Circle({
       strokeColor: '#FF0000',
       strokeOpacity: 0.8,
       strokeWeight: 2,
       fillColor: '#FF0000',
       fillOpacity: 0.35,
       map: map,
       center: citymap[city].center,
       radius: Math.sqrt(citymap[city].population) * 100
     });
   }
 }
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCQC8NbagOxTUOpgsS8rlODtnPCM3MSmEk&callback=initMap"></script>
    <script>
    function defaultChartConfig(containerId, data) {
        nv.addGraph(function() {
            var chart = nv.models.sparklinePlus();
            chart.margin({right:0})
            .x(function(d,i) { return i })
                .showLastValue(false)
                .xTickFormat(function(d) {
                    return d3.time.format('%x')(new Date(data[d].x))
                });
            d3.select(containerId)
                    .datum(data)
                    .call(chart);
            return chart;
        });
    }
    defaultChartConfig("#chart1",sine());
    defaultChartConfig("#chart2", volatileChart(130.0, 0.02));
    defaultChartConfig("#chart3", volatileChart(25.0, 0.09,30));
    defaultChartConfig("#chart4", volatileChart(35.0, 0.09,30));
    function sine() {
        var sin = [];
        var now =+new Date();
        for (var i = 0; i < 100; i++) {
            sin.push({x: now + i * 1000 * 60 * 60 * 24, y: Math.sin(i/10)});
        }
        return sin;
    }
    function volatileChart(startPrice, volatility, numPoints) {
        var rval =  [];
        var now =+new Date();
        numPoints = numPoints || 100;
        for(var i = 1; i < numPoints; i++) {
            rval.push({x: now + i * 1000 * 60 * 60 * 24, y: startPrice});
            var rnd = Math.random();
            var changePct = 2 * volatility * rnd;
            if ( changePct > volatility) {
                changePct -= (2*volatility);
            }
            startPrice = startPrice + startPrice * changePct;
        }
        return rval;
    }
</script>
  </body>
</html>

