d3.json(
"/ca/data/most_visited_pages_by_users?startDate=15-11-2015&endDate=10-12-2015", 
function(error, json){
	if (error) return console.warn(error);

	var result = [];
	for(var i=0; i<json.length; i++){
					for (var propName in json[i]) {
						if(propName != 'rowkey'){
							result.push(new row(json[i].rowkey, json[i][propName], propName));
						}
					}
				}
console.log(json);

var expensesByName = d3.nest()
.key(function(d) { return d.key; })
.entries(result);
console.log(expensesByName);
	drawMostVisited(expensesByName);
}
);

function row(rowkey, count, key){
	this.x = rowkey;
	this.y = count;
	this.key = key;
}


function drawMostVisited(result1){
	nv.addGraph(function() {
		var chart = nv.models.multiBarChart();
		chart.yAxis
		.tickFormat(d3.format(',.1f'));

//chart.yRange([0,0,0,10,2000]);

		d3.select('#mostvisited svg')
		.datum(sinAndCos())
		.transition().duration(500)
		.call(chart);

		nv.utils.windowResize(chart.update);

		return chart;
	});
}

function sinAndCos() {
  var sin = [],sin2 = [],
      cos = [];

  //Data is represented as an array of {x,y} pairs.
  for (var i = 0; i < 100; i++) {
    sin.push({x: i, y: Math.sin(i/10)});
    sin2.push({x: i, y: Math.sin(i/10) *0.25 + 0.5});
    cos.push({x: i, y: .5 * Math.cos(i/10)});
  }

  //Line chart data should be sent as an array of series objects.
  return [
    {
      values: sin,      //values - represents the array of {x,y} data points
      key: 'Sine Wave', //key  - the name of the series.
      color: '#ff7f0e'  //color - optional: choose your own line color.
    },
    {
      values: cos,
      key: 'Cosine Wave',
      color: '#2ca02c'
    },
    {
      values: sin2,
      key: 'Another sine wave',
      color: '#7777ff',
      area: true      //area - set to true if you want this line to turn into a filled area chart.
    }
  ];
}


